
#Add these to models.py file
class Cart(models.Model):
	user= models.ForeignKey(User)
	active= mdoels.BooleanField(default=true)
	order_date= mdoels.DateField(null=True)
	payment_type=models.CharField(max_length=100, null=True)   
    payment_id=models.CharField(max_length=100, null=True) 	
	
	def add_to_cart(self,book_id)
	    book=Book.objects.get(pk=book_id)
		try:
		    preexisting_order = BookOrder.objects.get(book=book, cart=self)
			preexisting_order.quantity +=1
			preexisting_order.save()
		except: BookOrder.DoesNotExist:
		    new_order = BookOrder.objects.create(
		       book=book,
			   cart=self,
			   quantity=1
			)
			new_order.save()
	
	def remove_from_cart(self,book_id):
	    book= Book.objects.get(pk=book_id)
		try:
		    preexisting_order = BookOrder.objects.get(book=book, cart=self)
			if preexisting_order.quantity > 1:
			    preexisting_order.quantity -=1
		        preexisting_order.save()
			else:
			    preexisting_order.delete()
			except BookOrder.DoesNotExist:
			   pass
	
class BookOrder(models.Model):
	book= models.ForeignKey(Book)
	cart= models.ForeignKey(Cart)
	quantity= mdoels.IntegerField(null=True)
	payment_type=models.CharField(max_length=100, null=True)   
    payment_id=models.CharField(max_length=100, null=True)
	
-----------------------------------------------------------------------


#This is how the views.py looks like

from django.shortcuts import render
from django.core.exceptions import ObjectDoesNotExist
from .models import Book, BookOrder, Cart

def index(request):
    return render(request, 'template.html')

def store(request):
    books= Book.objects.all()
	context= {
	    'books':book,
	}
	return render(request,'base.html',context)

def book_details(request,book_id):
    context= {
	     'book':Book.objects.get(pk=book_id),
	}
	retrun render(request,'store/detail.html',context)

def add_to_cart(request,book_id):
    if request.user.is_authenticated():
	    try:
		    book = Book.objects.get(pk=book_id)
		except ObjectDoesNotExist:
            pass
        else
		    try:
			    cart= Cart.objects.get(user=request.user, active =True)
			except ObjectDoesNotExist:
			    cart= Cart.objects.create(user=request.user)
				cart.save()
			cart.add_to_cart(book_id)
		return redirect('cart')
	else:
	    return redirect('index')

def remove_from_cart(request,book_id):
	if request.user.is_authenticated():
	    try:
		    book = Book.objects.get(pk=book_id)
		except ObjectDoesNotExist:
            pass
        else
			cart= Cart.objects.get(user=request.user, active =True)
			cart.remove_from_cart(book_id)
		return redirect('cart')
	else:
	    return redirect('index')	
		
def cart(request):
    if request.user.is_authenticated():
	    cart=cart.objects.filter(user=request.user_id, active=True)
		orders= BookOrder.objects.filter(cart=cart)
		total = 0
		count= 0
		for order in orders:
		    total += (order.book.price * order.quantity)
			count += order.quantity
		context = {
		    'cart' : orders,
			'total': total,
			'count': count,
		}
		return render(request, 'store/cart.html', context)
	else:
	    return redirect('index')

---------------------------------------------------------------------------

#This is how the base.html now looks like

{% extends 'bootstrap3/bootstrap3.html' %}
{% load staticfiles %}
(% load bootstrap3 %}
(% bootstrap_styles theme='simplex' type='min.css' %}
(% load bootstrap_themes %}

{% block bootstrap3_extra_head %}
     <link href="http://fonts.googleapis.com/css?family=Open+Sans:400,300,700" rel="stylesheet" type="text/css">
	 {% compress_css %}
	 <link href="{% static 'base/css/style.css %}" rel="stylesheet" type="text/css">
	 {% endcompress %}
{% endblock %}

{% block bootstrap3_title %}
     {% block title %}
           Welcome to Mystery Books!	 
	 {% endblock %}
{% endblock %}

{% block bootstrap3_content %}
    <nav class="navbar navbar-inverse navbar-fixed-top">
	   <div class="container">
	     <div class="navbar-header">
	       <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar">
		      <span class="icon-bar"> </span>
			  <span class="icon-bar"> </span>
			  <span class="icon-bar"> </span>
			</button>
			<a href="{% url 'index' %}" class="navbar-brand">Mystery Books</a>	
		</div>
		  <div id="navbar" class="collapse navbar-collapse">
		     <ul class="nav navbar-nav">
		        <li class="hvr-curl-top-right"><a href="{% url 'index' %}">Home</a></li>
			    <li class="hvr-curl-top-right"><a href="#about">About</a></li>
			    <li class="hvr-curl-top-right"><a href="#contact">Contact</a></li>
		     </ul>
			 <div class="navbar-form pull-right">
				{% if request.user.is_authenticated %}
					Welcome, {% if request.user.first_name %}
					{{ request.user.first_name}}
					{% else %}
					{{ request.user.username  }}
					{% endif %}! <a href="(% url 'auth_logout' %}"> Log Out</a>
				{% else %}
					 Welcome, mysterious person! <a href="{% url 'auth_login' %}">Log In? </a> or <a href="{% url 'registration_register' %}">Register</a>
				{% endif %}
			 </div>
		  </div>
	     </div>
	</nav>
    <div class="container-fluid">
	  <img src="{% static 'base/img/header_full.jpg' %}" class="bg"/>
	  <div class="parallax">
	    <div class="row">
	     {% block body %}
		 <div class="col-md-8 col-md-offset-2 col-sm-12 maincontent">
		   <div style= "text-align:center"><h3>Welcome to our store!</h3></div>         //Changes are made here
		   {% for book in books %}
		   <div class="storefront_book_display">
		   <a href="{% url 'book_details' book.id %}">
		       <img src="{% static 'base/img/empty_cover.jpg' %}">
			   <span class="storefront_book_title">{{ book.title }}</span>
			   <span class="storefront_book_author">{{ book.author }}</span>
			   </a>
			   {% if request.user.is_authenticated %}
			   <span class="storefront_add_to_cart">
			       <a href="{% url 'add_to_cart' book.id %}">[Add to Cart]</a>
			   </span>
			   {% endif %}
			</div>
			{% endfor %}	
		 </div>
		 {% endblock %}
		</div>
	  </div>
	</div>
	<div class="row text-center navbar footer">
	  <div class="col-md-12">
	     <p> 2015 Mystery Books </p>
	  </div>
	</div>
{% endblock %}

---------------------------------------------------------------------------------------

#Create a new html file cart.html under the store template and write the below code in it

{% extends 'base.html' %}
{% load static %}

{% block body %}
<div class="col-md-8 col-md-offset-2 col-sm-12 maincontent">
    <div style="text-align:center;text-decoration:underline"><h3>Your Cart</h3></div>
	    <div class="cart_container">
		{% for item in cart %}
		    <div class="cart_item">
			    <div class="cart_listing">
				    <span class="title">{{ item.book.title }}</span> by {{ item.book.author.first_name }} {{ item.book.author.last_name }}
				</div>
				<div class="cart_price">
				    <span class="cart_quantity">{{ item.quantity }} x $<span class="cart_value">{{ item.book.price }}</span></span>
					Quantity: <a href="{% url 'add_to_cart' item.book.id %}">[+]</a> / <a href="{ url 'remove_from_cart' item.book.id %}">[-]</a>
				</div>
			</div>
		{% empty %}
			<div>
			There are no items in your cart.
			</div>
		{% endfor %}
		<div class="cart_total">
			 <h4> Total: $<span class="cart_value">{{ total }}</span></h4>
		</div>
		</div>
	</div>
</div>
{% endblock %}

--------------------------------------------------------------------

# Add these to the style.css file

.storefront_add_to_cart {
    display: block;
	margin-top: 10px;
}
	
/* Cart Style*/

.cart_container {
	display: block;
	max_width: 750px;
	margin-left: auto;
	margin-right: auto;
}

.cart_item {
    width: 100%;
	margin-top: 20px;
	display: block;
	border-bottom: 1px solid black;
	padding-bottom: 20px;
}

.cart_listing {
    display: inline-block;
	width: 50%;
}

.cart_listing.title {
    display: block;
	font-weight: bold;
}

.cart_price{
    display: inline-block;
	text-align: right;
	width: 49%;
	vertical-align: top;
}

.cart_value {
    font-weight: bold;
}

.cart_quantity {
    display: block;
}

.cart_total {
     text-align: right;
	 margin-top: 20px;
}


--------------------------------------------------------------------------------
	
#This is how the urls.py would now look like

import ...

urlpatterns= [
    url(r'^$',views.store, name='index'),
	url(r'^book/(\d+), views.book_details, name='book_details'),          
    url(r'^add/(\d+), views.add_to_cart, name='add_to_cart'),                  //Change was made here
	url(r'^remove/(\d+), views.remove_from_cart, name='remove_from_cart'),
	url(r'^cart/), views.cart, name='cart'),
]



--------------------------------------------------------------------------------------

./manage.py runserver

--------------------------------------------------------------------------------------


#This is how the admin.py would now look like
from django.contrib import admin

from .models import Book,Author, BookOrder,Cart

class BookAdmin (admin,ModelAdmin):
    list_display = ('title','author','price','stock')

class AuthorAdmin(admin.ModelAdmin):
    list_display= ('last_name', 'first_name')
	
class BookOrderAdmin(admin.ModelAdmin):
    list_display= ('book', 'cart','quantity')

class CartAdmin(admin.ModelAdmin):
    list_display= ('user', 'active','order_date')

admin.site.register(Book, BookAdmin)
admin.site.register(Author, AuthorAdmin)
admin.site.register(BookOrder, BookOrderAdmin)
admin.site.register(Cart, CartAdmin)


-------------------------------------------------------------------------------------------

#Add this to the gitignore file

# Compiled static assets
static